{"version":3,"sources":["assets/nba-logoman-word-white.svg","components/TopNavBar.js","constants.js","components/Profile.js","components/ShotChart.js","components/CountSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TopNavBar","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","src","logo","alt","React","Component","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerName","playerId","Profile","_this$props$playerInf","props","playerInfo","teamAbbreviation","teamCity","teamName","height","weight","pts","reb","ast","pie","console","log","concat","window","d3_hexbin","hexbin","ShotChart","_this","nba","stats","shots","PlayerID","Season","then","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayType","chartType","call","datum","id","CountSlider","_getPrototypeOf2","_len","length","args","Array","_key","state","inputValue","onChange","cleanValue","Number","setState","row","col","span","offset","slider","min","max","input_number","style","marginLeft","RadioGroup","Radio","Group","DataViewContainer","onCountSliderChange","onChartTypeChange","e","target","onTooltipChange","_this$state","ShotChart_ShotChart","CountSlider_CountSlider","_","debounce","es_radio","es_switch","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","onSelect","loadPlayerInfo","handleSearch","searchPlayers","_ref","fullName","auto_complete","size","onSearch","placeholder","optionLabelProp","input","suffix","icon","type","Main","findPlayer","info","objectSpread","commonPlayerInfo","playerHeadlineStats","SearchBar_SearchBar","Profile_Profile","DataViewContainer_DataViewContainer","App","TopNavBar_TopNavBar","Main_Main","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+PCG3BC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMF,UAAU,WAAWG,IAAI,cAJzDnB,EAAA,CAA+BoB,IAAMC,qCCHxBC,EAAyB,gFAEzBC,EAAsB,CAC/BC,WAAY,gBACZC,SAAU,QCDDC,EAAb,SAAAzB,GAAA,SAAAyB,IAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,GAAAxB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAwB,EAAAzB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAwB,EAAA,EAAAf,IAAA,SAAAC,MAAA,WACa,IAAAe,EAUDvB,KAAKwB,MAAMC,WARXC,EAFCH,EAEDG,iBACAC,EAHCJ,EAGDI,SACAC,EAJCL,EAIDK,SACAR,EALCG,EAKDH,WACAS,EANCN,EAMDM,OACAC,EAPCP,EAODO,OACAT,EARCE,EAQDF,SACAU,EATCR,EASDQ,IAAKC,EATJT,EASIS,IAAKC,EATTV,EASSU,IAAKC,EATdX,EAScW,IAInB,OADAC,QAAQC,IAAIpC,KAAKwB,MAAMC,YAErBhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BAAf,GAAAyB,OAA+CjB,IAC/CX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACVC,IAAG,GAAAwB,OAAKnB,EAAL,KAAAmB,OAA+BhB,EAA/B,QACHN,IAAI,gBAETN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,GAAAyB,OAAyCV,EAAzC,KAAAU,OAAqDT,KAEzDnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVC,IAAG,GAAAwB,OD5Ba,8CC4Bb,KAAAA,OAA4BX,EAA5B,aACHX,IAAI,aAETN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,GAAAyB,OAAyCR,KAE7CpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,GAAAyB,OAAyCP,KAE7CrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,OACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,GAAAyB,OAAyCN,KAE7CtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,OACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,GAAAyB,OAAyCL,KAE7CvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,OACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,GAAAyB,OAAyCJ,KAE7CxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAf,OACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAf,GAAAyB,OAAyCH,UAnD3DZ,EAAA,CAA6BN,IAAMC,qCCInCqB,OAAOC,UAAY,CAACC,OAASA,KAEtB,IAAMC,EAAb,SAAA5C,GAAA,SAAA4C,IAAA,OAAA3C,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,GAAA3C,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAA2C,EAAA5C,GAAAC,OAAAQ,EAAA,EAAAR,CAAA2C,EAAA,EAAAlC,IAAA,qBAAAC,MAAA,WAQyB,IAAAkC,EAAA1C,KACjB2C,IAAIC,MAAMC,MAAM,CACZC,SAAU9C,KAAKwB,MAAMH,SACrB0B,OAAQ,YACTC,KAAK,SAACC,GACL,IAAMC,EAAcD,EAASE,kBAAkBC,IAAI,SAAAC,GAAI,MAAK,CACxDC,GAAID,EAAKE,KAAO,KAAO,GACvBC,GAAIH,EAAKI,KAAO,IAAM,GACtBC,YAAaL,EAAKM,WAClBC,cAAeP,EAAKQ,aACpBC,eAAgBT,EAAKU,gBAGnBC,EAAiBC,IAAU,eACjCD,EAAeE,KAAK,IACpB,IAAMC,EAAcC,kBAAQC,MAAM,KAC5BC,EAAczB,kBACf0B,oBAAoB7B,EAAKlB,MAAMgD,UAC/BC,gBAAgB/B,EAAKlB,MAAMiD,iBAC3BC,YAAYhC,EAAKlB,MAAMmD,WAC5BX,EAAeY,KAAKT,GACpBH,EAAea,MAAM3B,GAAa0B,KAAKN,OA7BnD,CAAA/D,IAAA,SAAAC,MAAA,WAkCQ,OACIC,EAAAC,EAAAC,cAAA,OAAKmE,GAAG,mBAnCpBrC,EAAA,CAA+BzB,IAAMC,+CCNxB8D,EAAb,SAAAlF,GAAA,SAAAkF,IAAA,IAAAC,EAAAtC,EAAA5C,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,GAAA,QAAAE,EAAA7E,UAAA8E,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjF,UAAAiF,GAAA,OAAA3C,EAAA5C,OAAAG,EAAA,EAAAH,CAAAE,MAAAgF,EAAAlF,OAAAI,EAAA,EAAAJ,CAAAiF,IAAAH,KAAAzE,MAAA6E,EAAA,CAAAhF,MAAAqC,OAAA8C,MACIG,MAAQ,CACJC,WAAY7C,EAAKlB,MAAMhB,OAF/BkC,EAKI8C,SAAW,SAAChF,GACR,IAAMiF,EAAaC,OAAOlF,GAASA,EAAOkC,EAAK4C,MAAMC,WACrD7C,EAAKiD,SAAS,CACVJ,WAAYE,IAEhB/C,EAAKlB,MAAMgE,SAASC,IAV5B/C,EAAA,OAAA5C,OAAAO,EAAA,EAAAP,CAAAiF,EAAAlF,GAAAC,OAAAQ,EAAA,EAAAR,CAAAiF,EAAA,EAAAxE,IAAA,SAAAC,MAAA,WAaa,IACG+E,EAAevF,KAAKsF,MAApBC,WACR,OACI9E,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACInF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAKC,KAAM,GAAIC,OAAQ,GACnBtF,EAAAC,EAAAC,cAACqF,EAAA,EAAD,CACIC,IAAK,EACLC,IAAK,GACLV,SAAUxF,KAAKwF,SACfhF,MAA6B,kBAAf+E,EAA0BA,EAAa,KAG7D9E,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAKC,KAAM,GACPrF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,CACIF,IAAK,EACLC,IAAK,GACLE,MAAO,CAAEC,WAAY,IACrB7F,MAAO+E,EACPC,SAAUxF,KAAKwF,iBA/BvCT,EAAA,CAAiC/D,IAAMC,+CCGjCqF,EAAaC,IAAMC,MAEZC,EAAb,SAAA5G,GAAA,SAAA4G,IAAA,IAAAzB,EAAAtC,EAAA5C,OAAAC,EAAA,EAAAD,CAAAE,KAAAyG,GAAA,QAAAxB,EAAA7E,UAAA8E,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjF,UAAAiF,GAAA,OAAA3C,EAAA5C,OAAAG,EAAA,EAAAH,CAAAE,MAAAgF,EAAAlF,OAAAI,EAAA,EAAAJ,CAAA2G,IAAA7B,KAAAzE,MAAA6E,EAAA,CAAAhF,MAAAqC,OAAA8C,MACIG,MAAQ,CACJd,SAAU,EACVG,UAAW,SACXF,iBAAiB,GAJzB/B,EAOIgE,oBAAsB,SAAClC,GACnB9B,EAAKiD,SAAS,CACVnB,cATZ9B,EAaIiE,kBAAoB,SAACC,GACjBlE,EAAKiD,SAAS,CACVhB,UAAWiC,EAAEC,OAAOrG,SAfhCkC,EAmBIoE,gBAAkB,SAACrC,GACf/B,EAAKiD,SAAS,CACVlB,qBArBZ/B,EAAA,OAAA5C,OAAAO,EAAA,EAAAP,CAAA2G,EAAA5G,GAAAC,OAAAQ,EAAA,EAAAR,CAAA2G,EAAA,EAAAlG,IAAA,SAAAC,MAAA,WAyBa,IAAAuG,EAC4C/G,KAAKsF,MAA9Cd,EADHuC,EACGvC,SAAUG,EADboC,EACapC,UAAWF,EADxBsC,EACwBtC,gBAG7B,OAFAtC,QAAQC,IAAIpC,KAAKsF,OAGb7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACqG,EAAD,CACI3F,SAAUrB,KAAKwB,MAAMH,SACrBmD,SAAUA,EACVG,UAAWA,EACXF,gBAAiBA,IAGH,WAAdE,EACAlE,EAAAC,EAAAC,cAACsG,EAAD,CACIzG,MAAOgE,EACPgB,SAAU0B,IAAEC,SAASnH,KAAK0G,oBAAqB,OAC9C,KAGTjG,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACInF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAKC,KAAM,EAAGC,OAAQ,GAClBtF,EAAAC,EAAAC,cAAC2F,EAAD,CAAYd,SAAUxF,KAAK2G,kBAAmBnG,MAAOmE,GACjDlE,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAO5G,MAAO,UAAd,UACAC,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAO5G,MAAO,WAAd,aAGRC,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CAAKC,KAAM,GACPrF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAQC,gBAAgB,KAChBC,kBAAkB,MAClBC,gBAAc,EACdhC,SAAUxF,KAAK8G,yBAxD/CL,EAAA,CAAuCzF,IAAMC,qCCHvCwG,EAASC,IAAaD,OAEfE,EAAb,SAAA9H,GAAA,SAAA8H,IAAA,IAAA3C,EAAAtC,EAAA5C,OAAAC,EAAA,EAAAD,CAAAE,KAAA2H,GAAA,QAAA1C,EAAA7E,UAAA8E,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjF,UAAAiF,GAAA,OAAA3C,EAAA5C,OAAAG,EAAA,EAAAH,CAAAE,MAAAgF,EAAAlF,OAAAI,EAAA,EAAAJ,CAAA6H,IAAA/C,KAAAzE,MAAA6E,EAAA,CAAAhF,MAAAqC,OAAA8C,MACIG,MAAQ,CACJsC,WAAY,IAFpBlF,EAKImF,SAAW,SAACzG,GACRsB,EAAKlB,MAAMsG,eAAe1G,IANlCsB,EASIqF,aAAe,SAACvH,GACZkC,EAAKiD,SAAS,CACViC,WAAapH,EAAamC,IAAIqF,cAAcxH,GAAO4C,IAAI,SAAA6E,GAAA,IAAEC,EAAFD,EAAEC,SAAU7G,EAAZ4G,EAAY5G,SAAZ,OACnDZ,EAAAC,EAAAC,cAAC8G,EAAD,CAAQlH,IAAKc,EAAUb,MAAO0H,GAC1BzH,EAAAC,EAAAC,cAAA,OACIC,UAAU,oBACVC,IAAG,GAAAwB,OAAKnB,EAAL,KAAAmB,OAA+BhB,EAA/B,QACHN,IAAI,YAERN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAuBsH,MAP1B,MAXjCxF,EAAA,OAAA5C,OAAAO,EAAA,EAAAP,CAAA6H,EAAA9H,GAAAC,OAAAQ,EAAA,EAAAR,CAAA6H,EAAA,EAAApH,IAAA,SAAAC,MAAA,WAyBa,IACGoH,EAAe5H,KAAKsF,MAApBsC,WACR,OACInH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,CACIvH,UAAU,aACVwH,KAAK,QACLR,WAAYA,EACZC,SAAU7H,KAAK6H,SACfQ,SAAUrI,KAAK+H,aACfO,YAAY,oBACZC,gBAAgB,SAEhB9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAOC,OAAQhI,EAAAC,EAAAC,cAAC+H,EAAA,EAAD,CAAMC,KAAK,kBArC1ChB,EAAA,CAA+B3G,IAAMC,WCAxB2H,EAAb,SAAA/I,GAAA,SAAA+I,IAAA,IAAA5D,EAAAtC,EAAA5C,OAAAC,EAAA,EAAAD,CAAAE,KAAA4I,GAAA,QAAA3D,EAAA7E,UAAA8E,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAjF,UAAAiF,GAAA,OAAA3C,EAAA5C,OAAAG,EAAA,EAAAH,CAAAE,MAAAgF,EAAAlF,OAAAI,EAAA,EAAAJ,CAAA8I,IAAAhE,KAAAzE,MAAA6E,EAAA,CAAAhF,MAAAqC,OAAA8C,MACIG,MAAQ,CACJ7D,WAAYN,GAFpBuB,EASIoF,eAAiB,SAAC1G,GAAe,IACrBC,EAAasB,IAAIkG,WAAWzH,GAA5BC,SAERsB,IAAIC,MAAMnB,WAAW,CAACqB,SAAUzB,IAAW2B,KACvC,SAAC8F,GACG3G,QAAQC,IAAI0G,GACZ,IAAMrH,EAAU3B,OAAAiJ,EAAA,EAAAjJ,CAAA,GACTgJ,EAAKE,iBAAiB,GACtBF,EAAKG,oBAAoB,IAGhCvG,EAAKiD,SAAS,CACVlE,kBArBpBiB,EAAA,OAAA5C,OAAAO,EAAA,EAAAP,CAAA8I,EAAA/I,GAAAC,OAAAQ,EAAA,EAAAR,CAAA8I,EAAA,EAAArI,IAAA,oBAAAC,MAAA,WAMQR,KAAK8H,eAAe9H,KAAKsF,MAAM7D,WAAWL,cANlD,CAAAb,IAAA,SAAAC,MAAA,WA4BQ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACuI,EAAD,CAAWpB,eAAgB9H,KAAK8H,iBAChCrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACwI,EAAD,CAAS1H,WAAYzB,KAAKsF,MAAM7D,aAChChB,EAAAC,EAAAC,cAACyI,EAAD,CAAmB/H,SAAUrB,KAAKsF,MAAM7D,WAAWJ,iBAjCrEuH,EAAA,CAA0B5H,IAAMC,WCQjBoI,mLATX,OACI5I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC2I,EAAD,MACA7I,EAAAC,EAAAC,cAAC4I,EAAD,cALMtI,aCQEuI,QACW,cAA7BlH,OAAOmH,SAASC,UAEe,UAA7BpH,OAAOmH,SAASC,UAEhBpH,OAAOmH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpJ,EAAAC,EAAAC,cAACmJ,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnH,KAAK,SAAAoH,GACjCA,EAAaC","file":"static/js/main.e8c09d0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import React from 'react';\r\nimport logo from '../assets/nba-logoman-word-white.svg';\r\n\r\nexport class TopNavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </header>\r\n        );\r\n    }\r\n}","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\r\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\r\nexport const DEFAULT_PLAYER_INFO = {\r\n    playerName: 'Stephen Curry',\r\n    playerId: 201939\r\n};","import React from 'react';\r\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from \"../constants\";\r\n\r\nexport class Profile extends React.Component {\r\n    render() {\r\n        const {\r\n            teamAbbreviation,\r\n            teamCity,\r\n            teamName,\r\n            playerName,\r\n            height,\r\n            weight,\r\n            playerId,\r\n            pts, reb, ast, pie,\r\n        } = this.props.playerInfo;\r\n\r\n        console.log(this.props.playerInfo);\r\n        return (\r\n          <div className=\"profile\">\r\n              <div className=\"profile-entry player-name\">{`${playerName}`}</div>\r\n              <img className=\"profile-pic\"\r\n                   src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                   alt=\"Profile Pic\"\r\n              />\r\n              <div className=\"profile-entry\">\r\n                  <div className=\"profile-entry-left\">Team</div>\r\n                  <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\r\n              </div>\r\n              <img className=\"team-logo\"\r\n                   src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\r\n                   alt=\"Team Pic\"\r\n              />\r\n              <div className=\"profile-entry\">\r\n                  <div className=\"profile-entry-left\">Height</div>\r\n                  <div className=\"profile-entry-right\">{`${height}`}</div>\r\n              </div>\r\n              <div className=\"profile-entry\">\r\n                  <div className=\"profile-entry-left\">Weight</div>\r\n                  <div className=\"profile-entry-right\">{`${weight}`}</div>\r\n              </div>\r\n              <div className=\"profile-entry\">\r\n                  <div className=\"profile-entry-left\">PTS</div>\r\n                  <div className=\"profile-entry-right\">{`${pts}`}</div>\r\n              </div>\r\n              <div className=\"profile-entry\">\r\n                  <div className=\"profile-entry-left\">REB</div>\r\n                  <div className=\"profile-entry-right\">{`${reb}`}</div>\r\n              </div>\r\n              <div className=\"profile-entry\">\r\n                  <div className=\"profile-entry-left\">AST</div>\r\n                  <div className=\"profile-entry-right\">{`${ast}`}</div>\r\n              </div>\r\n              <div className=\"profile-entry\">\r\n                  <div className=\"profile-entry-left\">PIE</div>\r\n                  <div className=\"profile-entry-right\">{`${pie}`}</div>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport nba from 'nba';\r\nimport * as d3 from 'd3';\r\nimport { hexbin } from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart';\r\nimport PropTypes from 'prop-types';\r\n\r\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\r\n\r\nexport class ShotChart extends React.Component {\r\n    static propTypes = {\r\n        playerId: PropTypes.number.isRequired,\r\n        minCount: PropTypes.number.isRequired,\r\n        chartType: PropTypes.string.isRequired,\r\n        displayToolTips: PropTypes.bool.isRequired\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        nba.stats.shots({\r\n            PlayerID: this.props.playerId,\r\n            Season: \"2017-18\"\r\n        }).then((response) => {\r\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\r\n                x: (shot.locX + 250) / 10,\r\n                y: (shot.locY + 50) / 10,\r\n                action_type: shot.actionType,\r\n                shot_distance: shot.shotDistance,\r\n                shot_made_flag: shot.shotMadeFlag,\r\n            }));\r\n\r\n            const courtSelection = d3.select(\"#shot-chart\");\r\n            courtSelection.html('');\r\n            const chart_court = court().width(500);\r\n            const chart_shots = shots()\r\n                .shotRenderThreshold(this.props.minCount)\r\n                .displayToolTips(this.props.displayToolTips)\r\n                .displayType(this.props.chartType);\r\n            courtSelection.call(chart_court);\r\n            courtSelection.datum(final_shots).call(chart_shots);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"shot-chart\"></div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Slider, InputNumber, Row, Col } from 'antd';\r\n\r\nexport class CountSlider extends React.Component {\r\n    state = {\r\n        inputValue: this.props.value,\r\n    }\r\n\r\n    onChange = (value) => {\r\n        const cleanValue = Number(value) ? value: this.state.inputValue;\r\n        this.setState({\r\n            inputValue: cleanValue,\r\n        });\r\n        this.props.onChange(cleanValue);\r\n    }\r\n\r\n    render() {\r\n        const { inputValue } = this.state;\r\n        return (\r\n            <Row>\r\n                <Col span={12} offset={4}>\r\n                    <Slider\r\n                        min={2}\r\n                        max={20}\r\n                        onChange={this.onChange}\r\n                        value={typeof inputValue === 'number' ? inputValue : 0}\r\n                    />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <InputNumber\r\n                        min={2}\r\n                        max={20}\r\n                        style={{ marginLeft: 16 }}\r\n                        value={inputValue}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { ShotChart } from './ShotChart';\r\nimport {CountSlider} from \"./CountSlider\"\r\nimport { Radio, Switch, Row, Col } from 'antd';\r\nimport _ from 'lodash';\r\n\r\nconst RadioGroup = Radio.Group;\r\n\r\nexport class DataViewContainer extends React.Component {\r\n    state = {\r\n        minCount: 2,\r\n        chartType: 'hexbin',\r\n        displayToolTips: true\r\n    }\r\n\r\n    onCountSliderChange = (minCount) => {\r\n        this.setState({\r\n            minCount\r\n        });\r\n    }\r\n\r\n    onChartTypeChange = (e) => {\r\n        this.setState({\r\n            chartType: e.target.value\r\n        });\r\n    }\r\n\r\n    onTooltipChange = (displayToolTips) => {\r\n        this.setState({\r\n            displayToolTips\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { minCount, chartType, displayToolTips } = this.state;\r\n        console.log(this.state);\r\n\r\n        return (\r\n            <div className=\"data-view\">\r\n                <ShotChart\r\n                    playerId={this.props.playerId}\r\n                    minCount={minCount}\r\n                    chartType={chartType}\r\n                    displayToolTips={displayToolTips}\r\n                />\r\n                {\r\n                    chartType === \"hexbin\" ?\r\n                    <CountSlider\r\n                        value={minCount}\r\n                        onChange={_.debounce(this.onCountSliderChange, 500)}\r\n                    /> : null\r\n                }\r\n\r\n                <Row>\r\n                    <Col span={8} offset={7}>\r\n                        <RadioGroup onChange={this.onChartTypeChange} value={chartType}>\r\n                            <Radio value={\"hexbin\"}>Hexbin</Radio>\r\n                            <Radio value={\"scatter\"}>Scatter</Radio>\r\n                        </RadioGroup>\r\n                    </Col>\r\n                    <Col span={2}>\r\n                        <Switch checkedChildren=\"On\"\r\n                                unCheckedChildren=\"Off\"\r\n                                defaultChecked\r\n                                onChange={this.onTooltipChange}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Icon, Input, AutoComplete } from 'antd';\r\nimport nba from 'nba';\r\nimport {PROFILE_PIC_URL_PREFIX} from \"../constants\"\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\nexport class SearchBar extends React.Component {\r\n    state = {\r\n        dataSource: [],\r\n    }\r\n\r\n    onSelect = (playerName) => {\r\n        this.props.loadPlayerInfo(playerName);\r\n    }\r\n\r\n    handleSearch = (value) => {\r\n        this.setState({\r\n            dataSource: !value ? [] : nba.searchPlayers(value).map(({fullName, playerId}) =>\r\n                <Option key={playerId} value={fullName}>\r\n                    <img\r\n                        className=\"player-option-pic\"\r\n                        src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                        alt=\"Profile\"\r\n                    />\r\n                    <span className=\"player-option-label\">{fullName}</span>\r\n                </Option>\r\n            )\r\n\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        return (\r\n            <AutoComplete\r\n                className=\"search-bar\"\r\n                size=\"large\"\r\n                dataSource={dataSource}\r\n                onSelect={this.onSelect}\r\n                onSearch={this.handleSearch}\r\n                placeholder=\"Search NBA Player\"\r\n                optionLabelProp=\"value\"\r\n            >\r\n                <Input suffix={<Icon type=\"search\" />} />\r\n            </AutoComplete>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport nba from 'nba';\r\nimport { Profile } from \"./Profile\";\r\nimport { DataViewContainer } from \"./DataViewContainer\";\r\nimport {SearchBar} from \"./SearchBar\"\r\nimport {DEFAULT_PLAYER_INFO} from \"../constants\"\r\n\r\nexport class Main extends React.Component {\r\n    state = {\r\n        playerInfo: DEFAULT_PLAYER_INFO\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadPlayerInfo(this.state.playerInfo.playerName);\r\n    }\r\n\r\n    loadPlayerInfo = (playerName) => {\r\n        const { playerId } = nba.findPlayer(playerName);\r\n\r\n        nba.stats.playerInfo({PlayerID: playerId}).then(\r\n            (info) => {\r\n                console.log(info);\r\n                const playerInfo = {\r\n                    ...info.commonPlayerInfo[0],\r\n                    ...info.playerHeadlineStats[0]\r\n                };\r\n\r\n                this.setState({\r\n                    playerInfo\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"main\">\r\n              <SearchBar loadPlayerInfo={this.loadPlayerInfo}/>\r\n              <div className=\"player\">\r\n                  <Profile playerInfo={this.state.playerInfo}/>\r\n                  <DataViewContainer playerId={this.state.playerInfo.playerId}/>\r\n              </div>\r\n          </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { TopNavBar } from \"./TopNavBar\";\nimport { Main } from \"./Main\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n            <TopNavBar />\n            <Main/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}